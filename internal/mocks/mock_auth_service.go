// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bonus2k/go-diplom-gophkeeper/internal/services/auth (interfaces: ServiceAuth)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/bonus2k/go-diplom-gophkeeper/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceAuth is a mock of ServiceAuth interface.
type MockServiceAuth struct {
	ctrl     *gomock.Controller
	recorder *MockServiceAuthMockRecorder
}

// MockServiceAuthMockRecorder is the mock recorder for MockServiceAuth.
type MockServiceAuthMockRecorder struct {
	mock *MockServiceAuth
}

// NewMockServiceAuth creates a new mock instance.
func NewMockServiceAuth(ctrl *gomock.Controller) *MockServiceAuth {
	mock := &MockServiceAuth{ctrl: ctrl}
	mock.recorder = &MockServiceAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceAuth) EXPECT() *MockServiceAuthMockRecorder {
	return m.recorder
}

// CreateJwt mocks base method.
func (m *MockServiceAuth) CreateJwt(arg0 *models.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJwt", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateJwt indicates an expected call of CreateJwt.
func (mr *MockServiceAuthMockRecorder) CreateJwt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJwt", reflect.TypeOf((*MockServiceAuth)(nil).CreateJwt), arg0)
}

// CreateUserCtx mocks base method.
func (m *MockServiceAuth) CreateUserCtx(arg0 string) (*models.UserCtx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserCtx", arg0)
	ret0, _ := ret[0].(*models.UserCtx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUserCtx indicates an expected call of CreateUserCtx.
func (mr *MockServiceAuthMockRecorder) CreateUserCtx(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserCtx", reflect.TypeOf((*MockServiceAuth)(nil).CreateUserCtx), arg0)
}
